--- a/patches/0011-limit_nrg_range.patch	1970-01-01 01:00:00.000000000 +0100
+++ b/patches/0011-limit_nrg_range.patch	2013-09-16 17:00:24.000000000 +0200
@@ -0,0 +1,46 @@
+--- src.p10/code_env.c	2013-09-16 15:49:54.000000000 +0200
++++ src.p11/code_env.c	2013-09-16 16:58:52.000000000 +0200
+@@ -567,37 +567,21 @@
+       
+     if ( coupling && channel == 1 ) {
+        
+-      for (band = no_of_bands - 1; band > 0; band--) {
++      for (band = 0; band < no_of_bands; band++) {
+           
+-        if ( ptr_nrg[band] - ptr_nrg[band-1] > codeBookScfLavBalanceFreq ) {
++        if ( ptr_nrg[band] > codeBookScfLavBalanceFreq ) {
+            
+-          ptr_nrg[band-1] = ptr_nrg[band] - codeBookScfLavBalanceFreq;
+-        }
+-      }
+-       
+-      for (band = 1; band < no_of_bands; band++) {
+-          
+-        if ( ptr_nrg[band-1] - ptr_nrg[band] > codeBookScfLavBalanceFreq ) {
+-           
+-          ptr_nrg[band] = ptr_nrg[band-1] - codeBookScfLavBalanceFreq;
++          ptr_nrg[band] = codeBookScfLavBalanceFreq;
+         }
+       }
+     }
+     else {
+        
+-      for (band = no_of_bands - 1; band > 0; band--) {
+-          
+-        if ( ptr_nrg[band] - ptr_nrg[band-1] > codeBookScfLavLevelFreq ) {
+-           
+-          ptr_nrg[band-1] = ptr_nrg[band] - codeBookScfLavLevelFreq;
+-        }
+-      }
+-       
+-      for (band = 1; band < no_of_bands; band++) {
++      for (band = 0; band < no_of_bands; band++) {
+           
+-        if ( ptr_nrg[band-1] - ptr_nrg[band] > codeBookScfLavLevelFreq ) {
++        if ( ptr_nrg[band] > codeBookScfLavLevelFreq ) {
+            
+-          ptr_nrg[band] = ptr_nrg[band-1] - codeBookScfLavLevelFreq;
++          ptr_nrg[band] = codeBookScfLavLevelFreq;
+         }
+       }
+     }
